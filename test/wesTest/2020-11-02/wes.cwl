cwlVersion: v1.0\n\ndoc: | \n  This workflow is used to process in DG4VN project \n\nclass: Workflow\nid: mash_workflow\nrequirements:\n  - class: StepInputExpressionRequirement\n\ninputs:\n  input_fastqs:\n    type: File[]\n  input_fastqs1:\n    type: File[]\n  input_fastqs2:\n    type: File[]\n  padding_bed: \n    type: File\n  indexed_reference_fasta:\n    type: File \n    secondaryFiles: [.64.amb, .64.ann, .64.bwt, .64.pac, .64.sa, .64.alt, .dict, .fai]\n  indexed_reference_dpsnp_hg38:\n    type: File\n  output_basename: string\n\noutputs:\n  vcf_calling:\n    type: File \n    outputSource: GenotypeGVCF/output\n\nsteps:\n  QCFastq:\n    run: tasks/QCFastq.cwl\n    in:\n      input_fastqs: input_fastqs\n    out:\n      [output]\n\n  AlignmentReads:\n    run: tasks/AlignBwaMem.cwl \n    in: \n      input_fastqs1: input_fastqs1\n      input_fastqs2: input_fastqs2\n      indexed_reference_fasta: indexed_reference_fasta\n      output_aligned_reads:\n        source: output_basename\n        valueFrom: $(self + "_hg38_mapped.bam")\n    out:\n      [output]\n  \n  FastqToBam:\n    run: tasks/Fastq2Bam.cwl \n    in:\n      input_fastqs1: input_fastqs1\n      input_fastqs2: input_fastqs2\n      output_basename: output_basename\n      output_fastq2bam_bam:\n        source: output_basename\n        valueFrom: $(self + "_hg38_unmapped.bam")\n    out:\n      [output]\n\n  MergeBamAlignment: \n    run: tasks/MergeBamAlignment.cwl\n    in:\n      aligned_bam: AlignmentReads/output\n      unaligned_bam: FastqToBam/output\n      indexed_reference_fasta: indexed_reference_fasta\n      output_merged_bam:\n        source: output_basename\n        valueFrom: $(self + "_hg38_fin.bam")\n    out:\n      [output]\n\n  MarkDuplicates: \n    run: tasks/MarkDuplicates.cwl \n    in: \n      input_bam: MergeBamAlignment/output\n      output_md_bam:\n        source: output_basename\n        valueFrom: $(self + "_hg38_marked.bam")\n      output_report_txt:\n        source: output_basename\n        valueFrom: $(self + ".bam.txt")\n    out:\n      [output]\n    \n  SortBam: \n    run: tasks/SortBam.cwl \n    in: \n      input_bam: MarkDuplicates/output\n      output_sorted_bam:\n        source: output_basename \n        valueFrom: $(self + "_hg38_sorted.bam")\n    out: \n      [output]\n\n  RecalibrateBQSR: \n    run: tasks/RecalibrateBQSR.cwl \n    in: \n      input_bam: SortBam/output\n      indexed_reference_fasta: indexed_reference_fasta\n      indexed_reference_dpsnp_hg38: indexed_reference_dpsnp_hg38\n      output_recalibrate_bqsr:\n        source: output_basename\n        valueFrom: $(self + "_hg38_recal.table")\n    out:\n      [output]\n\n  ApplyBQSR: \n    run: tasks/ApplyBQSR.cwl \n    in: \n      input_bam: SortBam/output\n      input_recalibrate_bqsr:  RecalibrateBQSR/output\n      indexed_reference_fasta: indexed_reference_fasta\n      output_apply_bqsr: \n        source: output_basename\n        valueFrom: $(self + "_hg38_arr.bam")\n    out:\n      [output]\n\n  VariantCalling: \n    run: tasks/VariantCalling.cwl \n    in: \n      input_bam: ApplyBQSR/output\n      padding_bed: padding_bed\n      indexed_reference_fasta: indexed_reference_fasta\n      output_variant_calling: \n        source: output_basename\n        valueFrom: $(self + "_HL_hg38.g.vcf")\n    out:\n      [output]\n  \n  GenotypeGVCF: \n    run: tasks/GenotypeGVCF.cwl \n    in: \n      variant_calling: VariantCalling/output\n      indexed_reference_fasta: indexed_reference_fasta\n      output_vcf: \n        source: output_basename\n        valueFrom: $(self + "_HL_hg38.vcf")\n    out:\n      [output]\n